name: CI

on:
  push:
    branches:
      - "**"
    tags:
      - "**"

jobs:
  b2-posix:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        container: [
            {
              image: ubuntu:22.04,
              container-exec: "docker exec u22",
              container-name: "u22",
            },
            {
              image: ubuntu:24.04,
              container-exec: "docker exec u24",
              container-name: "u24",
            },
            # {
            #   image: debian:13,
            #   container-exec: "docker exec deb13",
            #   container-name: "deb13",
            # },
          ]
    steps:
      - name: setup qemu
        uses: docker/setup-qemu-action@v3
        with:
          platforms: riscv64

      - name: setup docker  Buildx
        uses: docker/setup-buildx-action@v3

      - name: start container
        run: |
          docker run --platform linux/riscv64 -d --name  ${{matrix.container.container-name}} -v ./:/src ${{matrix.container.image}} bash -c "while true; do sleep 30; done"

      - name: Show uname info
        run: |
          ${{matrix.container.container-exec}} uname -a
          ${{matrix.container.container-exec}} cat /etc/os-release

      - name: install dep
        run: |
          ${{matrix.container.container-exec}} bash -c "apt update && apt install -y zip curl tar bzip2 build-essential git  debhelper-compat dctrl-tools chrpath libbz2-dev liblzma-dev libzstd-dev libicu-dev mpi-default-dev bison flex docbook-to-man help2man xsltproc doxygen dh-python python3-all-dev python3-numpy graphviz dpkg-dev wget  gdb pkgconf docbook-xsl docbook-xml"

      - name: Download valgrind 3.25.1
        run: |
          ${{matrix.container.container-exec}} bash -c "wget https://answers.launchpad.net/ubuntu/+archive/primary/+sourcefiles/valgrind/1:3.25.1-0ubuntu1/valgrind_3.25.1.orig.tar.bz2"
          ${{matrix.container.container-exec}} bash -c "tar -xf valgrind_3.25.1.orig.tar.bz2 && cd valgrind-3.25.1 && ls -l "

      - name: Download debian's "valgrind 3.25 package control"
        run: |
          ${{matrix.container.container-exec}} bash -c "wget https://answers.launchpad.net/ubuntu/+archive/primary/+sourcefiles/valgrind/1:3.25.1-0ubuntu1/valgrind_3.25.1-0ubuntu1.debian.tar.xz && tar -xf valgrind_3.25.1-0ubuntu1.debian.tar.xz && cd debian && ls -l "

      - name: Setup valgrind for debian package
        run: |
          ${{matrix.container.container-exec}} bash -c 'cp -r debian/ valgrind-3.25.1/'

      - name: Modify debian/control file to allow riscv64 package
        run: |
          ${{matrix.container.container-exec}} bash -c "cd valgrind-3.25.1 && sed -i '23s/$/ riscv64/;48s/$/ riscv64/' debian/control"

      - name: prepare for test
        run: |
          ${{matrix.container.container-exec}} bash -c "cd valgrind-3.25.1 && ./autogen.sh &&  ./configure && make "

      - name:  test
        run: |
          ${{matrix.container.container-exec}} bash -c "cd valgrind-3.25.1 && make regtest"

      - name: Build deb package
        run: |
          ${{matrix.container.container-exec}} bash -c "cd valgrind-3.25.1 && dpkg-buildpackage -us -uc && cd .. && ls -l ./ && ls -l / && pwd"
      
      - name: zip deb package
        run: |
          ${{matrix.container.container-exec}} bash -c "zip valgrind-all.zip *deb"

      - name: Copy deb package
        run: |
          docker cp ${{matrix.container.container-name}}:/valgrind-all.zip ./

      - name: Show deb package
        run: ls -l

      - name: Upload deb package
        uses: actions/upload-artifact@v4
        with:
          name: valgrind-all.zip
          path: ./valgrind-all.zip
